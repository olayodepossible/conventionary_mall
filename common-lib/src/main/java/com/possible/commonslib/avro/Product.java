/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.possible.commonslib.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Product extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2670121694723612887L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Product\",\"namespace\":\"com.possible.commonslib.avro\",\"fields\":[{\"name\":\"productId\",\"type\":\"string\"},{\"name\":\"productLogo\",\"type\":[\"string\",\"null\"]},{\"name\":\"productName\",\"type\":[\"string\",\"null\"]},{\"name\":\"productFlavour\",\"type\":[\"string\",\"null\"]},{\"name\":\"productPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"vendorId\",\"type\":[\"string\",\"null\"]},{\"name\":\"productDescription\",\"type\":[\"string\",\"null\"]},{\"name\":\"productNumInStock\",\"type\":[\"int\",\"null\"]},{\"name\":\"rating\",\"type\":[\"null\",\"int\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Product> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Product> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Product> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Product> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Product> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Product to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Product from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Product instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Product fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence productId;
  private java.lang.CharSequence productLogo;
  private java.lang.CharSequence productName;
  private java.lang.CharSequence productFlavour;
  private java.lang.Double productPrice;
  private java.lang.CharSequence vendorId;
  private java.lang.CharSequence productDescription;
  private java.lang.Integer productNumInStock;
  private java.lang.Integer rating;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Product() {}

  /**
   * All-args constructor.
   * @param productId The new value for productId
   * @param productLogo The new value for productLogo
   * @param productName The new value for productName
   * @param productFlavour The new value for productFlavour
   * @param productPrice The new value for productPrice
   * @param vendorId The new value for vendorId
   * @param productDescription The new value for productDescription
   * @param productNumInStock The new value for productNumInStock
   * @param rating The new value for rating
   */
  public Product(java.lang.CharSequence productId, java.lang.CharSequence productLogo, java.lang.CharSequence productName, java.lang.CharSequence productFlavour, java.lang.Double productPrice, java.lang.CharSequence vendorId, java.lang.CharSequence productDescription, java.lang.Integer productNumInStock, java.lang.Integer rating) {
    this.productId = productId;
    this.productLogo = productLogo;
    this.productName = productName;
    this.productFlavour = productFlavour;
    this.productPrice = productPrice;
    this.vendorId = vendorId;
    this.productDescription = productDescription;
    this.productNumInStock = productNumInStock;
    this.rating = rating;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return productId;
    case 1: return productLogo;
    case 2: return productName;
    case 3: return productFlavour;
    case 4: return productPrice;
    case 5: return vendorId;
    case 6: return productDescription;
    case 7: return productNumInStock;
    case 8: return rating;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: productId = (java.lang.CharSequence)value$; break;
    case 1: productLogo = (java.lang.CharSequence)value$; break;
    case 2: productName = (java.lang.CharSequence)value$; break;
    case 3: productFlavour = (java.lang.CharSequence)value$; break;
    case 4: productPrice = (java.lang.Double)value$; break;
    case 5: vendorId = (java.lang.CharSequence)value$; break;
    case 6: productDescription = (java.lang.CharSequence)value$; break;
    case 7: productNumInStock = (java.lang.Integer)value$; break;
    case 8: rating = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.lang.CharSequence getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.CharSequence value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'productLogo' field.
   * @return The value of the 'productLogo' field.
   */
  public java.lang.CharSequence getProductLogo() {
    return productLogo;
  }


  /**
   * Sets the value of the 'productLogo' field.
   * @param value the value to set.
   */
  public void setProductLogo(java.lang.CharSequence value) {
    this.productLogo = value;
  }

  /**
   * Gets the value of the 'productName' field.
   * @return The value of the 'productName' field.
   */
  public java.lang.CharSequence getProductName() {
    return productName;
  }


  /**
   * Sets the value of the 'productName' field.
   * @param value the value to set.
   */
  public void setProductName(java.lang.CharSequence value) {
    this.productName = value;
  }

  /**
   * Gets the value of the 'productFlavour' field.
   * @return The value of the 'productFlavour' field.
   */
  public java.lang.CharSequence getProductFlavour() {
    return productFlavour;
  }


  /**
   * Sets the value of the 'productFlavour' field.
   * @param value the value to set.
   */
  public void setProductFlavour(java.lang.CharSequence value) {
    this.productFlavour = value;
  }

  /**
   * Gets the value of the 'productPrice' field.
   * @return The value of the 'productPrice' field.
   */
  public java.lang.Double getProductPrice() {
    return productPrice;
  }


  /**
   * Sets the value of the 'productPrice' field.
   * @param value the value to set.
   */
  public void setProductPrice(java.lang.Double value) {
    this.productPrice = value;
  }

  /**
   * Gets the value of the 'vendorId' field.
   * @return The value of the 'vendorId' field.
   */
  public java.lang.CharSequence getVendorId() {
    return vendorId;
  }


  /**
   * Sets the value of the 'vendorId' field.
   * @param value the value to set.
   */
  public void setVendorId(java.lang.CharSequence value) {
    this.vendorId = value;
  }

  /**
   * Gets the value of the 'productDescription' field.
   * @return The value of the 'productDescription' field.
   */
  public java.lang.CharSequence getProductDescription() {
    return productDescription;
  }


  /**
   * Sets the value of the 'productDescription' field.
   * @param value the value to set.
   */
  public void setProductDescription(java.lang.CharSequence value) {
    this.productDescription = value;
  }

  /**
   * Gets the value of the 'productNumInStock' field.
   * @return The value of the 'productNumInStock' field.
   */
  public java.lang.Integer getProductNumInStock() {
    return productNumInStock;
  }


  /**
   * Sets the value of the 'productNumInStock' field.
   * @param value the value to set.
   */
  public void setProductNumInStock(java.lang.Integer value) {
    this.productNumInStock = value;
  }

  /**
   * Gets the value of the 'rating' field.
   * @return The value of the 'rating' field.
   */
  public java.lang.Integer getRating() {
    return rating;
  }


  /**
   * Sets the value of the 'rating' field.
   * @param value the value to set.
   */
  public void setRating(java.lang.Integer value) {
    this.rating = value;
  }

  /**
   * Creates a new Product RecordBuilder.
   * @return A new Product RecordBuilder
   */
  public static com.possible.commonslib.avro.Product.Builder newBuilder() {
    return new com.possible.commonslib.avro.Product.Builder();
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Product RecordBuilder
   */
  public static com.possible.commonslib.avro.Product.Builder newBuilder(com.possible.commonslib.avro.Product.Builder other) {
    if (other == null) {
      return new com.possible.commonslib.avro.Product.Builder();
    } else {
      return new com.possible.commonslib.avro.Product.Builder(other);
    }
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Product instance.
   * @param other The existing instance to copy.
   * @return A new Product RecordBuilder
   */
  public static com.possible.commonslib.avro.Product.Builder newBuilder(com.possible.commonslib.avro.Product other) {
    if (other == null) {
      return new com.possible.commonslib.avro.Product.Builder();
    } else {
      return new com.possible.commonslib.avro.Product.Builder(other);
    }
  }

  /**
   * RecordBuilder for Product instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Product>
    implements org.apache.avro.data.RecordBuilder<Product> {

    private java.lang.CharSequence productId;
    private java.lang.CharSequence productLogo;
    private java.lang.CharSequence productName;
    private java.lang.CharSequence productFlavour;
    private java.lang.Double productPrice;
    private java.lang.CharSequence vendorId;
    private java.lang.CharSequence productDescription;
    private java.lang.Integer productNumInStock;
    private java.lang.Integer rating;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.possible.commonslib.avro.Product.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.productId)) {
        this.productId = data().deepCopy(fields()[0].schema(), other.productId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.productLogo)) {
        this.productLogo = data().deepCopy(fields()[1].schema(), other.productLogo);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.productName)) {
        this.productName = data().deepCopy(fields()[2].schema(), other.productName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.productFlavour)) {
        this.productFlavour = data().deepCopy(fields()[3].schema(), other.productFlavour);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.productPrice)) {
        this.productPrice = data().deepCopy(fields()[4].schema(), other.productPrice);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.vendorId)) {
        this.vendorId = data().deepCopy(fields()[5].schema(), other.vendorId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.productDescription)) {
        this.productDescription = data().deepCopy(fields()[6].schema(), other.productDescription);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.productNumInStock)) {
        this.productNumInStock = data().deepCopy(fields()[7].schema(), other.productNumInStock);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.rating)) {
        this.rating = data().deepCopy(fields()[8].schema(), other.rating);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing Product instance
     * @param other The existing instance to copy.
     */
    private Builder(com.possible.commonslib.avro.Product other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.productId)) {
        this.productId = data().deepCopy(fields()[0].schema(), other.productId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productLogo)) {
        this.productLogo = data().deepCopy(fields()[1].schema(), other.productLogo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.productName)) {
        this.productName = data().deepCopy(fields()[2].schema(), other.productName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.productFlavour)) {
        this.productFlavour = data().deepCopy(fields()[3].schema(), other.productFlavour);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.productPrice)) {
        this.productPrice = data().deepCopy(fields()[4].schema(), other.productPrice);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vendorId)) {
        this.vendorId = data().deepCopy(fields()[5].schema(), other.vendorId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.productDescription)) {
        this.productDescription = data().deepCopy(fields()[6].schema(), other.productDescription);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.productNumInStock)) {
        this.productNumInStock = data().deepCopy(fields()[7].schema(), other.productNumInStock);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.rating)) {
        this.rating = data().deepCopy(fields()[8].schema(), other.rating);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.productId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productLogo' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductLogo() {
      return productLogo;
    }


    /**
      * Sets the value of the 'productLogo' field.
      * @param value The value of 'productLogo'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductLogo(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.productLogo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productLogo' field has been set.
      * @return True if the 'productLogo' field has been set, false otherwise.
      */
    public boolean hasProductLogo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'productLogo' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductLogo() {
      productLogo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'productName' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductName() {
      return productName;
    }


    /**
      * Sets the value of the 'productName' field.
      * @param value The value of 'productName'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.productName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'productName' field has been set.
      * @return True if the 'productName' field has been set, false otherwise.
      */
    public boolean hasProductName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'productName' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductName() {
      productName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'productFlavour' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductFlavour() {
      return productFlavour;
    }


    /**
      * Sets the value of the 'productFlavour' field.
      * @param value The value of 'productFlavour'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductFlavour(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.productFlavour = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'productFlavour' field has been set.
      * @return True if the 'productFlavour' field has been set, false otherwise.
      */
    public boolean hasProductFlavour() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'productFlavour' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductFlavour() {
      productFlavour = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'productPrice' field.
      * @return The value.
      */
    public java.lang.Double getProductPrice() {
      return productPrice;
    }


    /**
      * Sets the value of the 'productPrice' field.
      * @param value The value of 'productPrice'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductPrice(java.lang.Double value) {
      validate(fields()[4], value);
      this.productPrice = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'productPrice' field has been set.
      * @return True if the 'productPrice' field has been set, false otherwise.
      */
    public boolean hasProductPrice() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'productPrice' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductPrice() {
      productPrice = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'vendorId' field.
      * @return The value.
      */
    public java.lang.CharSequence getVendorId() {
      return vendorId;
    }


    /**
      * Sets the value of the 'vendorId' field.
      * @param value The value of 'vendorId'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setVendorId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.vendorId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'vendorId' field has been set.
      * @return True if the 'vendorId' field has been set, false otherwise.
      */
    public boolean hasVendorId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'vendorId' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearVendorId() {
      vendorId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'productDescription' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductDescription() {
      return productDescription;
    }


    /**
      * Sets the value of the 'productDescription' field.
      * @param value The value of 'productDescription'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductDescription(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.productDescription = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'productDescription' field has been set.
      * @return True if the 'productDescription' field has been set, false otherwise.
      */
    public boolean hasProductDescription() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'productDescription' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductDescription() {
      productDescription = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'productNumInStock' field.
      * @return The value.
      */
    public java.lang.Integer getProductNumInStock() {
      return productNumInStock;
    }


    /**
      * Sets the value of the 'productNumInStock' field.
      * @param value The value of 'productNumInStock'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setProductNumInStock(java.lang.Integer value) {
      validate(fields()[7], value);
      this.productNumInStock = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'productNumInStock' field has been set.
      * @return True if the 'productNumInStock' field has been set, false otherwise.
      */
    public boolean hasProductNumInStock() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'productNumInStock' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearProductNumInStock() {
      productNumInStock = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'rating' field.
      * @return The value.
      */
    public java.lang.Integer getRating() {
      return rating;
    }


    /**
      * Sets the value of the 'rating' field.
      * @param value The value of 'rating'.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder setRating(java.lang.Integer value) {
      validate(fields()[8], value);
      this.rating = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'rating' field has been set.
      * @return True if the 'rating' field has been set, false otherwise.
      */
    public boolean hasRating() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'rating' field.
      * @return This builder.
      */
    public com.possible.commonslib.avro.Product.Builder clearRating() {
      rating = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Product build() {
      try {
        Product record = new Product();
        record.productId = fieldSetFlags()[0] ? this.productId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.productLogo = fieldSetFlags()[1] ? this.productLogo : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.productName = fieldSetFlags()[2] ? this.productName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.productFlavour = fieldSetFlags()[3] ? this.productFlavour : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.productPrice = fieldSetFlags()[4] ? this.productPrice : (java.lang.Double) defaultValue(fields()[4]);
        record.vendorId = fieldSetFlags()[5] ? this.vendorId : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.productDescription = fieldSetFlags()[6] ? this.productDescription : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.productNumInStock = fieldSetFlags()[7] ? this.productNumInStock : (java.lang.Integer) defaultValue(fields()[7]);
        record.rating = fieldSetFlags()[8] ? this.rating : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Product>
    WRITER$ = (org.apache.avro.io.DatumWriter<Product>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Product>
    READER$ = (org.apache.avro.io.DatumReader<Product>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.productId);

    if (this.productLogo == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.productLogo);
    }

    if (this.productName == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.productName);
    }

    if (this.productFlavour == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.productFlavour);
    }

    if (this.productPrice == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.productPrice);
    }

    if (this.vendorId == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.vendorId);
    }

    if (this.productDescription == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.productDescription);
    }

    if (this.productNumInStock == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.productNumInStock);
    }

    if (this.rating == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.rating);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.productId = in.readString(this.productId instanceof Utf8 ? (Utf8)this.productId : null);

      if (in.readIndex() != 0) {
        in.readNull();
        this.productLogo = null;
      } else {
        this.productLogo = in.readString(this.productLogo instanceof Utf8 ? (Utf8)this.productLogo : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.productName = null;
      } else {
        this.productName = in.readString(this.productName instanceof Utf8 ? (Utf8)this.productName : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.productFlavour = null;
      } else {
        this.productFlavour = in.readString(this.productFlavour instanceof Utf8 ? (Utf8)this.productFlavour : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.productPrice = null;
      } else {
        this.productPrice = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.vendorId = null;
      } else {
        this.vendorId = in.readString(this.vendorId instanceof Utf8 ? (Utf8)this.vendorId : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.productDescription = null;
      } else {
        this.productDescription = in.readString(this.productDescription instanceof Utf8 ? (Utf8)this.productDescription : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.productNumInStock = null;
      } else {
        this.productNumInStock = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rating = null;
      } else {
        this.rating = in.readInt();
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.productId = in.readString(this.productId instanceof Utf8 ? (Utf8)this.productId : null);
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.productLogo = null;
          } else {
            this.productLogo = in.readString(this.productLogo instanceof Utf8 ? (Utf8)this.productLogo : null);
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.productName = null;
          } else {
            this.productName = in.readString(this.productName instanceof Utf8 ? (Utf8)this.productName : null);
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.productFlavour = null;
          } else {
            this.productFlavour = in.readString(this.productFlavour instanceof Utf8 ? (Utf8)this.productFlavour : null);
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.productPrice = null;
          } else {
            this.productPrice = in.readDouble();
          }
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.vendorId = null;
          } else {
            this.vendorId = in.readString(this.vendorId instanceof Utf8 ? (Utf8)this.vendorId : null);
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.productDescription = null;
          } else {
            this.productDescription = in.readString(this.productDescription instanceof Utf8 ? (Utf8)this.productDescription : null);
          }
          break;

        case 7:
          if (in.readIndex() != 0) {
            in.readNull();
            this.productNumInStock = null;
          } else {
            this.productNumInStock = in.readInt();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rating = null;
          } else {
            this.rating = in.readInt();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










